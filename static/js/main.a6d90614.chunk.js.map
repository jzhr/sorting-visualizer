{"version":3,"sources":["sortingAlgorithms/MergeSort.js","sortingAlgorithms/BubbleSort.js","sortingAlgorithms/QuickSort.js","components/Title.js","components/SpeedSlider.js","components/InputSlider.js","components/SortingVisualizer.js","sortingAlgorithms/SelectionSort.js","sortingAlgorithms/InsertionSort.js","App.js","serviceWorker.js","reducers/speedReducer.js","reducers/inputReducer.js","index.js"],"names":["getMergeSortAnimations","array","animations","auxiliaryArray","slice","mergeSort","startIndex","endIndex","middleIndex","Math","floor","sortArray","i","j","push","length","merge","getBubbleSortAnimations","N","swap","bubbleSort","firstIndex","secondIndex","temp","getQuickSortAnimations","quickSort","low","high","piv_idx","piv","partition","auxillaryArray","Title","Typography","variant","this","props","title","React","Component","mainTheme","createMuiTheme","palette","primary","main","overrides","MuiSlider","markLabel","color","markLabelActive","sliderMarks","value","label","SpeedSlider","handleChange","event","setSpeed","ThemeProvider","theme","id","Slider","sliderSpeed","aria-labelledby","onChange","marks","disabled","isDisabled","min","max","step","track","connect","state","console","log","dispatch","type","payload","InputSlider","setInput","inputSize","valueLabelDisplay","SortingVisualizer","resetDisabled","selectionDisabled","insertionDisabled","bubbleDisabled","mergeDisabled","quickDisabled","sortDisabled","sliderDisabled","selectedAlgo","document","resetArray","prevProps","setState","enableButtons","random","arrayBars","getElementsByClassName","style","backgroundColor","val","disableButtons","selectionSort","insertionSort","endIdx","min_idx","getSelectionSortAnimations","isColorChange","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","setTimeout","barIndex","barStyle","newHeight","height","key","getInsertionSortAnimations","barOneIdx","barTwoIdx","className","AppBar","position","Toolbar","Box","display","m","Button","onClick","selectSortingAlgorithm","runSortingAlgorithm","map","idx","App","Boolean","window","location","hostname","match","initialState","speedReducer","action","inputReducer","store","createStore","combineReducers","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6d90614.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n  let animations = [];\n  let auxiliaryArray = array.slice();\n  mergeSort(auxiliaryArray, 0, auxiliaryArray.length - 1, animations);\n\n  for (let i = 0; i <= auxiliaryArray.length - 1; i++) {\n    animations.push([\"finished\", i]);\n  }\n\n  return animations;\n}\n\nfunction mergeSort(auxiliaryArray, startIndex, endIndex, animations) {\n  if (startIndex === endIndex)\n    return;\n  const middleIndex = Math.floor((startIndex + endIndex) / 2);\n  mergeSort(auxiliaryArray, startIndex, middleIndex, animations);\n  mergeSort(auxiliaryArray, middleIndex + 1, endIndex, animations);\n  merge(auxiliaryArray, startIndex, middleIndex, endIndex, animations);\n}\n\nfunction merge(auxiliaryArray, startIndex, middleIndex, endIndex, animations) {\n  let sortArray = [];\n  let i = startIndex;\n  let j = middleIndex + 1;\n  while (i <= middleIndex && j <= endIndex) {\n    // Comparing values at i-th and j-th index, so push to change their color\n    animations.push([i, j]);\n    // Push them again to revert back to original color\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      // Push the swap\n      animations.push([sortArray.length + startIndex, auxiliaryArray[i]]);\n      sortArray.push(auxiliaryArray[i++]);\n    } else {\n      // Push the swap\n      animations.push([sortArray.length + startIndex, auxiliaryArray[j]]);\n      sortArray.push(auxiliaryArray[j++]);\n    }\n  }\n  while (i <= middleIndex) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([sortArray.length + startIndex, auxiliaryArray[i]]);\n    sortArray.push(auxiliaryArray[i++]);\n  }\n  while (j <= endIndex) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([sortArray.length + startIndex, auxiliaryArray[j]]);\n    sortArray.push(auxiliaryArray[j++]);\n  }\n  for (let i = startIndex; i <= endIndex; i++) {\n    auxiliaryArray[i] = sortArray[i - startIndex];\n  }\n}","export function getBubbleSortAnimations(array) {\n  let animations = [];\n  let auxiliaryArray = array.slice();\n  bubbleSort(auxiliaryArray, animations);\n\n  for (let i = 0; i <= array.length - 1; i++) {\n    animations.push([\"finished\", i]);\n  }\n\n  return animations;\n}\n\nfunction bubbleSort(auxiliaryArray, animations) {\n  const N = auxiliaryArray.length;\n  for (let i = 0; i < N - 1; i++) {\n    for (let j = 0; j < N - i - 1; j++) {\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]);\n      if (auxiliaryArray[j] > auxiliaryArray[j + 1]) {\n        animations.push([j, auxiliaryArray[j + 1]]);\n        animations.push([j + 1, auxiliaryArray[j]]);\n        swap(auxiliaryArray, j, j + 1);\n      } else {\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n      }\n    }\n  }\n}\n\nfunction swap(auxiliaryArray, firstIndex, secondIndex) {\n  let temp = auxiliaryArray[firstIndex];\n  auxiliaryArray[firstIndex] = auxiliaryArray[secondIndex];\n  auxiliaryArray[secondIndex] = temp;\n}","export function getQuickSortAnimations(array) {\n  let animations = [];\n  let auxiliaryArray = array.slice();\n\n  let low = 0;\n  let high = array.length - 1;\n  quickSort(auxiliaryArray, low, high, animations);\n\n  for (let i = 0; i <= array.length - 1; i++) {\n    animations.push([\"finished\", i]);\n  }\n\n  return animations;\n}\n\nfunction quickSort(auxiliaryArray, low, high, animations) {\n  let piv_idx;\n\n  if (low < high) {\n    piv_idx = partition(auxiliaryArray, low, high, animations);\n    quickSort(auxiliaryArray, low, piv_idx - 1, animations);\n    quickSort(auxiliaryArray, piv_idx + 1, high, animations);\n  }\n}\n\nfunction partition(auxiliaryArray, low, high, animations) {\n  // Pivot: element to be placed at right position\n  let piv = auxiliaryArray[high];\n  let piv_idx = low;\n\n  for (let i = low; i <= high - 1; i++) {\n    animations.push([i, high]);\n    animations.push([i, high]);\n    if (auxiliaryArray[i] <= piv) {\n      animations.push([i, auxiliaryArray[piv_idx]]);\n      animations.push([piv_idx, auxiliaryArray[i]]);\n      swap(auxiliaryArray, i, piv_idx);\n      piv_idx++;\n    } else {\n      animations.push([-1, -1]);\n      animations.push([-1, -1]);\n    }\n    animations.push([-1, -1]);\n    animations.push([-1, -1])\n  }\n  animations.push([-1, -1]);\n  animations.push([-1, -1]);\n  animations.push([-1, -1]);\n  animations.push([-1, -1]);\n\n  animations.push([piv_idx, auxiliaryArray[high]]);\n  animations.push([high, auxiliaryArray[piv_idx]]);\n  swap(auxiliaryArray, piv_idx, high);\n  return piv_idx;\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nexport class Title extends React.Component {\n  render() {\n    return <Typography variant='h2'>{this.props.title}</Typography>;\n  }\n}","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { connect } from 'react-redux';\n\nconst mainTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ffffff'\n    }\n  },\n  overrides: {\n    MuiSlider: {\n      markLabel: {\n        color: '#d9d9d9'\n      },\n      markLabelActive: {\n        color: '#ffffff'\n      }\n    }\n  }\n});\n\nconst sliderMarks = [{\n    value: 1,\n    label: 'Fast'\n  },\n  {\n    value: 5,\n    label: 'Medium'\n  },\n  {\n    value: 10,\n    label: 'Slow'\n  },\n];\n\n  \nclass SpeedSlider extends React.Component {\n  handleChange = (event, value) => {\n    this.props.setSpeed(value);\n  };\n\n  render() {\n    return (\n      <div>\n        <ThemeProvider theme={mainTheme}>\n          <Typography id='label' color='primary'>Animation Speed</Typography>\n          <Slider\n            value={this.props.sliderSpeed.value}\n            aria-labelledby='label'\n            onChange={this.handleChange}\n            color='primary'\n            marks={sliderMarks}\n            disabled={this.props.isDisabled}\n            min={1}\n            max={10}\n            step={null}\n            track={false}\n          />\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n    return {\n        sliderSpeed: state.sliderSpeed\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSpeed: (value) => {\n            dispatch({\n                type: \"SET_SPEED\",\n                payload: value\n            });\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpeedSlider)\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { connect } from 'react-redux';\n\nconst mainTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ffffff'\n    }\n  },\n  overrides: {\n    MuiSlider: {\n      markLabel: {\n        color: '#d9d9d9'\n      },\n      markLabelActive: {\n        color: '#ffffff'\n      }\n    }\n  }\n});\n  \nclass InputSlider extends React.Component {\n  handleChange = (event, value) => {\n    this.props.setInput(value);\n  };\n\n  render() {\n    return (\n      <div>\n        <ThemeProvider theme={mainTheme}>\n          <Typography id='label' color='primary'>Input Size</Typography>\n          <Slider\n            value={this.props.inputSize.value}\n            aria-labelledby='label'\n            onChange={this.handleChange}\n            color='primary'\n            disabled={this.props.isDisabled}\n            min={50}\n            max={350}\n            step={5}\n            track={false}\n            valueLabelDisplay=\"auto\"\n          />\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        inputSize: state.inputSize\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setInput: (value) => {\n            dispatch({\n                type: \"SET_INPUT\",\n                payload: value\n            });\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSlider)\n","import React from 'react';\nimport {getMergeSortAnimations} from '../sortingAlgorithms/MergeSort.js';\nimport {getSelectionSortAnimations} from '../sortingAlgorithms/SelectionSort.js';\nimport {getInsertionSortAnimations} from '../sortingAlgorithms/InsertionSort.js';\nimport {getBubbleSortAnimations} from '../sortingAlgorithms/BubbleSort.js';\nimport {getQuickSortAnimations} from '../sortingAlgorithms/QuickSort.js';\nimport '../styles/SortingVisualizer.css';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {Title} from './Title'\nimport SpeedSlider from './SpeedSlider';\nimport InputSlider from './InputSlider';\nimport { connect } from 'react-redux';\n\n// Main color of the array bars\nconst PRIMARY_COLOR = '#aec6cf';\n\n// Color of array bars that are being compared throughout the animations\nconst SECONDARY_COLOR = '#ff6961';\n\n// Color of array bars after sorting\nconst TERTIARY_COLOR = '#77dd77';\n\nclass SortingVisualizer extends React.Component {\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      array: [],\n      title: 'Select a sorting algorithm',\n      resetDisabled: false,\n      selectionDisabled: false,\n      insertionDisabled: false,\n      bubbleDisabled: false,\n      mergeDisabled: false,\n      quickDisabled: false,\n      sortDisabled: false,\n      sliderDisabled: false,\n      // Default selected sorting algorithm (0: merge)\n      selectedAlgo: -1,\n    };\n  }\n\n  componentDidMount() {\n    document.title = 'Sorting Visualizer';\n    this.resetArray();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.inputSize.value !== prevProps.inputSize.value) {\n      this.resetArray();\n    }\n  }\n\n  resetArray() {\n    this.setState({\n      title: 'Select a sorting algorithm'\n    });\n\n    this.enableButtons()\n\n    const array = [];\n    for (let i = 0; i < this.props.inputSize.value; i++) {\n      array.push(randomIntFromInterval(50, 650));\n    }\n\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < arrayBars.length; i++) {\n      arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\n    }\n\n    this.setState({array});\n  }\n\n  disableButtons() {\n    this.setState({\n      resetDisabled: true,\n      selectionDisabled: true,\n      insertionDisabled: true,\n      bubbleDisabled: true,\n      mergeDisabled: true,\n      quickDisabled: true,\n      sortDisabled: true,\n      sliderDisabled: true,\n    });\n  }\n\n  enableButtons(){\n    this.setState({\n      selectionDisabled: false,\n      insertionDisabled: false,\n      bubbleDisabled: false,\n      mergeDisabled: false,\n      quickDisabled: false,\n      sortDisabled: false,\n      sliderDisabled: false,\n    });\n  }\n\n  // Select algorithm to be run when an algorithm button is clicked\n  selectSortingAlgorithm(val) {\n    if (val === 0) {\n      this.setState({\n        selectedAlgo: 0,\n        selectionDisabled: true,\n        insertionDisabled: false,\n        bubbleDisabled: false,\n        mergeDisabled: false,\n        quickDisabled: false,\n        title: 'Selection Sort'\n      })\n    } else if (val === 1) {\n      this.setState({\n        selectedAlgo: 1,\n        selectionDisabled: false,\n        insertionDisabled: true,\n        bubbleDisabled: false,\n        mergeDisabled: false,\n        quickDisabled: false,\n        title: 'Insertion Sort'\n      })\n    } else if (val === 2) {\n      this.setState({\n        selectedAlgo: 2,\n        selectionDisabled: false,\n        insertionDisabled: false,\n        bubbleDisabled: true,\n        mergeDisabled: false,\n        quickDisabled: false,\n        title: 'Bubble Sort'\n      })\n    } else if (val === 3) {\n      this.setState({\n        selectedAlgo: 3,\n        selectionDisabled: false,\n        insertionDisabled: false,\n        bubbleDisabled: false,\n        mergeDisabled: true,\n        quickDisabled: false,\n        title: 'Merge Sort'\n      })\n    } else if (val === 4) {\n      this.setState({\n        selectedAlgo: 4,\n        selectionDisabled: false,\n        insertionDisabled: false,\n        bubbleDisabled: false,\n        mergeDisabled: false,\n        quickDisabled: true,\n        title: 'Quick Sort'\n      })\n    }\n  }\n\n  // Handler for 'Sort!' button\n  runSortingAlgorithm() {\n    if (this.state.selectedAlgo === 0) {\n      this.disableButtons();\n      this.selectionSort();\n    } else if (this.state.selectedAlgo === 1) {\n      this.disableButtons();\n      this.insertionSort();\n    } else if (this.state.selectedAlgo === 2) {\n      this.disableButtons();\n      this.bubbleSort();\n    } else if (this.state.selectedAlgo === 3) {\n      this.disableButtons();\n      this.mergeSort();\n    } else if (this.state.selectedAlgo === 4) {\n      this.disableButtons();\n      this.quickSort();\n    }\n  }\n\n  selectionSort() {\n    const animations = getSelectionSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = (animations[i][0] === \"comparison1\") || (animations[i][0] === \"comparison2\");\n      const arrayBars = document.getElementsByClassName('array-bar');\n\n      if(isColorChange === true) {\n        const color = (animations[i][0] === \"comparison1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        },i * this.props.sliderSpeed.value);\n\n      } else if (animations[i][0] === \"finished\") {\n        const [temp, barIndex, temp2] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n\n        setTimeout(() => {\n          barStyle.backgroundColor = TERTIARY_COLOR;\n          this.setState({\n            resetDisabled: false\n          })\n        },i * this.props.sliderSpeed.value);\n\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        },i * this.props.sliderSpeed.value);  \n      }\n    }\n  }\n\n  insertionSort() {\n    const animations = getInsertionSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = (animations[i][0] === \"comparison1\") || (animations[i][0] === \"comparison2\");\n      \n      if(isColorChange === true) {\n        const color = (animations[i][0] === \"comparison1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        \n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        },i * this.props.sliderSpeed.value);\n\n      } else if (animations[i][0] === \"finished\") {\n        const [temp, barIndex, temp2] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n\n        setTimeout(() => {\n          barStyle.backgroundColor = TERTIARY_COLOR;\n          this.setState({\n            resetDisabled: false\n          })\n        },i * this.props.sliderSpeed.value);\n\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        },i * this.props.sliderSpeed.value);\n      }\n    }\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (i % 4 === 0) || (i % 4 === 1);\n            \n            if(isColorChange === true && animations[i][0] !== \"finished\") {\n              const color = (i % 4 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n              const [barOneIndex, barTwoIndex] = animations[i];\n              const barOneStyle = arrayBars[barOneIndex].style;\n              const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                  barOneStyle.backgroundColor = color;\n                  barTwoStyle.backgroundColor = color;\n                },i * this.props.sliderSpeed.value);\n\n            } else if (animations[i][0] === \"finished\") {\n              const [temp, barIndex] = animations[i];\n              const barStyle = arrayBars[barIndex].style;\n      \n              setTimeout(() => {\n                barStyle.backgroundColor = TERTIARY_COLOR;\n                this.setState({\n                  resetDisabled: false\n                })\n              },i * this.props.sliderSpeed.value);\n\n            } else {\n                const [barIndex, newHeight] = animations[i];\n                if (barIndex === -1) {\n                  continue;\n                }\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                  barStyle.height = `${newHeight}px`;\n                },i * this.props.sliderSpeed.value);  \n            }\n        }\n  }\n\n  mergeSort() {\n    const animations = getMergeSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n\n      if (isColorChange && animations[i][0] !== \"finished\") {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.props.sliderSpeed.value);\n\n      } else if (animations[i][0] === \"finished\") {\n        const [temp, barIndex] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n\n        setTimeout(() => {\n          barStyle.backgroundColor = TERTIARY_COLOR;\n          this.setState({\n            resetDisabled: false\n          })\n        },i * this.props.sliderSpeed.value);\n\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * this.props.sliderSpeed.value);\n      }\n    }\n  }\n\n  quickSort() {\n    const animations = getQuickSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n    \n    for (let i = 0; i <= animations.length - 1; i++) {\n      const isColorChange = (i % 6 === 0) || (i % 6 === 1);\n\n      if (isColorChange === true && animations[i][0] !== \"finished\") {\n        const color = (i % 6 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        if(barOneIndex === -1) {\n          continue;\n        }\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        },i * this.props.sliderSpeed.value);\n\n      } else if (animations[i][0] === \"finished\") {\n        const [temp, barIndex] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n\n        setTimeout(() => {\n          barStyle.backgroundColor = TERTIARY_COLOR;\n          this.setState({\n            resetDisabled: false\n          })\n        },i * this.props.sliderSpeed.value);\n\n      } else {\n        const [barIndex, newHeight] = animations[i];\n        if (barIndex === -1) {\n          continue;\n        }\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        },i * this.props.sliderSpeed.value);  \n      }\n    }\n  }\n\n\n  render() {\n    const {array} = this.state;\n    return (\n      <div className='container'>\n        <AppBar position='static'>\n            <Toolbar>\n                <Typography variant='title' color='inherit'>\n                  Sorting Algorithm Visualizer\n                </Typography>\n                <Box display='inline' m={3}><Button disabled={this.state.resetDisabled} variant='contained' color='primary' onClick={() => this.resetArray()}>Reset</Button></Box>\n                <Box display='inline' m={1}><Button disabled={this.state.selectionDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(0)}>Selection Sort</Button></Box>\n                <Box display='inline' m={1}><Button disabled={this.state.insertionDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(1)}>Insertion Sort</Button></Box>\n                <Box display='inline' m={1}><Button disabled={this.state.bubbleDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(2)}>Bubble Sort</Button></Box>\n                <Box display='inline' m={1}><Button disabled={this.state.mergeDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(3)}>Merge Sort</Button></Box>\n                <Box display='inline' m={1}><Button disabled={this.state.quickDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(4)}>Quick Sort</Button></Box>\n                <Box display='inline' m={3}><Button disabled={this.state.sortDisabled} variant='contained' color='primary.light' onClick={() => this.runSortingAlgorithm()}>Sort!</Button></Box>\n            \n                <Box m={5}>\n                  <SpeedSlider isDisabled={this.state.sliderDisabled}/>\n                </Box>\n                <Box m={5}>\n                  <InputSlider isDisabled={this.state.sliderDisabled}/>\n                </Box>\n            </Toolbar>\n        </AppBar>\n\n        <Box m={2}><Title title={this.state.title}></Title></Box>\n\n        <div className='array-container'>\n          {array.map((value, idx) => (\n            <div\n              className='array-bar'\n              key={idx}\n              style={{\n                backgroundColor: PRIMARY_COLOR,\n                height: `${value}px`,\n              }}></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sliderSpeed: state.sliderSpeed,\n    inputSize: state.inputSize\n  };\n};\n\nexport default connect(mapStateToProps)(SortingVisualizer)","export function getSelectionSortAnimations(array) {\n  const animations = [];\n  const auxiliaryArray = array.slice();\n\n  selectionSort(auxiliaryArray, animations);\n\n  for (let i = 0; i <= array.length - 1; i++) {\n    animations.push([\"finished\", i, i]);\n  }\n\n  return animations;\n}\n\nfunction selectionSort(auxiliaryArray, animations) {\n  let endIdx = auxiliaryArray.length - 1;\n\n  for (let i = 0; i <= endIdx; i++) {\n    // Find minimum element in unsorted array\n    let min_idx = i;\n    for (let j = i + 1; j <= endIdx; j++) {\n      animations.push([\"comparison1\", min_idx, j]);\n      animations.push([\"comparison2\", min_idx, j]);\n      if (auxiliaryArray[j] < auxiliaryArray[min_idx]) {\n        min_idx = j;\n      }\n    }\n    // Swap min element with i-th element\n    animations.push([\"swap\", min_idx, auxiliaryArray[i]]);\n    animations.push([\"swap\", i, auxiliaryArray[min_idx]]);\n\n    let min = auxiliaryArray[min_idx];\n    auxiliaryArray[min_idx] = auxiliaryArray[i];\n    auxiliaryArray[i] = min;\n  }\n}","export function getInsertionSortAnimations(array) {\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  insertionSort(auxiliaryArray, animations);\n\n  for (let i = 0; i <= array.length - 1; i++) {\n    animations.push([\"finished\", i, i]);\n  }\n\n  return animations;\n}\n\nfunction insertionSort(auxiliaryArray, animations) {\n  let endIdx = auxiliaryArray.length - 1;\n\n  for (let i = 1; i <= endIdx; ++i) {\n    // Find minimum element in unsorted array\n    let key = auxiliaryArray[i];\n    let j = i - 1;\n\n    animations.push([\"comparison1\", j, i]);\n    animations.push([\"comparison2\", j, i]);\n\n    while (j >= 0 && auxiliaryArray[j] > key) {\n      animations.push([\"overwrite\", j + 1, auxiliaryArray[j]]);\n\n      auxiliaryArray[j + 1] = auxiliaryArray[j];\n      j--;\n\n      if (j >= 0) {\n        animations.push([\"comparison1\", j, i]);\n        animations.push([\"comparison2\", j, i]);\n      }\n    }\n    animations.push([\"overwrite\", j + 1, key]);\n    auxiliaryArray[j + 1] = key;\n  }\n}","import React from 'react';\nimport SortingVisualizer from './components/SortingVisualizer.js';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  value: 1\n};\n\nconst speedReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_SPEED\":\n      return {\n        ...state,\n        value: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default speedReducer;","const initialState = {\n  value: 200\n};\n\nconst inputReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_INPUT\":\n      return {\n        ...state,\n        value: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default inputReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport speedReducer from './reducers/speedReducer';\nimport inputReducer from './reducers/inputReducer';\n\nconst store = createStore(\n  combineReducers({\n    sliderSpeed: speedReducer,\n    inputSize: inputReducer\n  })\n);\n\n// store.subscribe(() => {\n//   console.log(\"Store updated!\", store.getState());\n// });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}