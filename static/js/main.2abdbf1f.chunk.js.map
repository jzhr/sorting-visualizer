{"version":3,"sources":["sortingAlgorithms/MergeSort.js","sortingAlgorithms/BubbleSort.js","sortingAlgorithms/QuickSort.js","components/Title.js","components/Slider.js","components/SortingVisualizer.jsx","sortingAlgorithms/SelectionSort.js","sortingAlgorithms/InsertionSort.js","App.js","serviceWorker.js","reducers/speedReducer.js","index.js"],"names":["getMergeSortAnimations","array","animations","auxiliaryArray","slice","mergeSort","startIndex","endIndex","middleIndex","Math","floor","sortArray","i","j","push","length","merge","getBubbleSortAnimations","N","swap","bubbleSort","firstIndex","secondIndex","temp","getQuickSortAnimations","quickSort","low","high","piv_idx","piv","partition","auxillaryArray","Title","Typography","variant","this","props","title","React","Component","mainTheme","createMuiTheme","palette","primary","main","overrides","MuiSlider","markLabel","color","markLabelActive","sliderMarks","value","label","SimpleSlider","handleChange","event","setSpeed","ThemeProvider","theme","id","Slider","sliderSpeed","aria-labelledby","onChange","marks","min","max","step","track","connect","state","speedReducer","dispatch","type","payload","SortingVisualizer","resetDisabled","selectionDisabled","insertionDisabled","bubbleDisabled","mergeDisabled","quickDisabled","sortDisabled","selectedAlgo","document","resetArray","setState","enableButtons","random","arrayBars","getElementsByClassName","style","backgroundColor","val","disableButtons","selectionSort","insertionSort","endIdx","min_idx","getSelectionSortAnimations","isColorChange","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","setTimeout","barIndex","barStyle","newHeight","height","key","getInsertionSortAnimations","barOneIdx","barTwoIdx","className","AppBar","position","Toolbar","Box","display","m","Button","disabled","onClick","selectSortingAlgorithm","runSortingAlgorithm","map","idx","App","Boolean","window","location","hostname","match","initialState","action","store","createStore","combineReducers","subscribe","console","log","getState","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2abdbf1f.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n  let animations = [];\r\n  let auxiliaryArray = array.slice();\r\n  mergeSort(auxiliaryArray, 0, auxiliaryArray.length - 1, animations);\r\n\r\n  for (let i = 0; i <= auxiliaryArray.length - 1; i++) {\r\n    animations.push([\"finished\", i]);\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\nfunction mergeSort(auxiliaryArray, startIndex, endIndex, animations) {\r\n  if (startIndex === endIndex)\r\n    return;\r\n  const middleIndex = Math.floor((startIndex + endIndex) / 2);\r\n  mergeSort(auxiliaryArray, startIndex, middleIndex, animations);\r\n  mergeSort(auxiliaryArray, middleIndex + 1, endIndex, animations);\r\n  merge(auxiliaryArray, startIndex, middleIndex, endIndex, animations);\r\n}\r\n\r\nfunction merge(auxiliaryArray, startIndex, middleIndex, endIndex, animations) {\r\n  let sortArray = [];\r\n  let i = startIndex;\r\n  let j = middleIndex + 1;\r\n  while (i <= middleIndex && j <= endIndex) {\r\n    // Comparing values at i-th and j-th index, so push to change their color\r\n    animations.push([i, j]);\r\n    // Push them again to revert back to original color\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // Push the swap\r\n      animations.push([sortArray.length + startIndex, auxiliaryArray[i]]);\r\n      sortArray.push(auxiliaryArray[i++]);\r\n    } else {\r\n      // Push the swap\r\n      animations.push([sortArray.length + startIndex, auxiliaryArray[j]]);\r\n      sortArray.push(auxiliaryArray[j++]);\r\n    }\r\n  }\r\n  while (i <= middleIndex) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([sortArray.length + startIndex, auxiliaryArray[i]]);\r\n    sortArray.push(auxiliaryArray[i++]);\r\n  }\r\n  while (j <= endIndex) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([sortArray.length + startIndex, auxiliaryArray[j]]);\r\n    sortArray.push(auxiliaryArray[j++]);\r\n  }\r\n  for (let i = startIndex; i <= endIndex; i++) {\r\n    auxiliaryArray[i] = sortArray[i - startIndex];\r\n  }\r\n}","export function getBubbleSortAnimations(array) {\r\n  let animations = [];\r\n  let auxiliaryArray = array.slice();\r\n  bubbleSort(auxiliaryArray, animations);\r\n\r\n  for (let i = 0; i <= array.length - 1; i++) {\r\n    animations.push([\"finished\", i]);\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\nfunction bubbleSort(auxiliaryArray, animations) {\r\n  const N = auxiliaryArray.length;\r\n  for (let i = 0; i < N - 1; i++) {\r\n    for (let j = 0; j < N - i - 1; j++) {\r\n      animations.push([j, j + 1]);\r\n      animations.push([j, j + 1]);\r\n      if (auxiliaryArray[j] > auxiliaryArray[j + 1]) {\r\n        animations.push([j, auxiliaryArray[j + 1]]);\r\n        animations.push([j + 1, auxiliaryArray[j]]);\r\n        swap(auxiliaryArray, j, j + 1);\r\n      } else {\r\n        animations.push([-1, -1]);\r\n        animations.push([-1, -1]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction swap(auxiliaryArray, firstIndex, secondIndex) {\r\n  let temp = auxiliaryArray[firstIndex];\r\n  auxiliaryArray[firstIndex] = auxiliaryArray[secondIndex];\r\n  auxiliaryArray[secondIndex] = temp;\r\n}","export function getQuickSortAnimations(array) {\r\n  let animations = [];\r\n  let auxiliaryArray = array.slice();\r\n\r\n  let low = 0;\r\n  let high = array.length - 1;\r\n  quickSort(auxiliaryArray, low, high, animations);\r\n\r\n  for (let i = 0; i <= array.length - 1; i++) {\r\n    animations.push([\"finished\", i]);\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\nfunction quickSort(auxiliaryArray, low, high, animations) {\r\n  let piv_idx;\r\n\r\n  if (low < high) {\r\n    piv_idx = partition(auxiliaryArray, low, high, animations);\r\n    quickSort(auxiliaryArray, low, piv_idx - 1, animations);\r\n    quickSort(auxiliaryArray, piv_idx + 1, high, animations);\r\n  }\r\n}\r\n\r\nfunction partition(auxiliaryArray, low, high, animations) {\r\n  // Pivot: element to be placed at right position\r\n  let piv = auxiliaryArray[high];\r\n  let piv_idx = low;\r\n\r\n  for (let i = low; i <= high - 1; i++) {\r\n    animations.push([i, high]);\r\n    animations.push([i, high]);\r\n    if (auxiliaryArray[i] <= piv) {\r\n      animations.push([i, auxiliaryArray[piv_idx]]);\r\n      animations.push([piv_idx, auxiliaryArray[i]]);\r\n      swap(auxiliaryArray, i, piv_idx);\r\n      piv_idx++;\r\n    } else {\r\n      animations.push([-1, -1]);\r\n      animations.push([-1, -1]);\r\n    }\r\n    animations.push([-1, -1]);\r\n    animations.push([-1, -1])\r\n  }\r\n  animations.push([-1, -1]);\r\n  animations.push([-1, -1]);\r\n  animations.push([-1, -1]);\r\n  animations.push([-1, -1]);\r\n\r\n  animations.push([piv_idx, auxiliaryArray[high]]);\r\n  animations.push([high, auxiliaryArray[piv_idx]]);\r\n  swap(auxiliaryArray, piv_idx, high);\r\n  return piv_idx;\r\n}\r\n\r\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\r\n  let temp = auxillaryArray[firstIndex];\r\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\r\n  auxillaryArray[secondIndex] = temp;\r\n}","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport class Title extends React.Component {\r\n  render() {\r\n    return <Typography variant='h2'>{this.props.title}</Typography>;\r\n  }\r\n}","import React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mainTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#ffffff'\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiSlider: {\r\n      markLabel: {\r\n        color: '#d9d9d9'\r\n      },\r\n      markLabelActive: {\r\n        color: '#ffffff'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst sliderMarks = [{\r\n    value: 1,\r\n    label: 'Fast'\r\n  },\r\n  {\r\n    value: 5,\r\n    label: 'Medium'\r\n  },\r\n  {\r\n    value: 10,\r\n    label: 'Slow'\r\n  },\r\n];\r\n\r\n  \r\nclass SimpleSlider extends React.Component {\r\n  handleChange = (event, value) => {\r\n    this.props.setSpeed(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ThemeProvider theme={mainTheme}>\r\n          <Typography id='label' color='primary'>Animation Speed</Typography>\r\n          <Slider\r\n            value={this.props.sliderSpeed.value}\r\n            aria-labelledby='label'\r\n            onChange={this.handleChange}\r\n            color='primary'\r\n            marks={sliderMarks}\r\n            min={1}\r\n            max={10}\r\n            step={null}\r\n            track={false}\r\n          />\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sliderSpeed: state.speedReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSpeed: (value) => {\r\n            dispatch({\r\n                type: \"SET_SPEED\",\r\n                payload: value\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleSlider)\r\n","import React from 'react';\r\nimport {getMergeSortAnimations} from '../sortingAlgorithms/MergeSort.js';\r\nimport {getSelectionSortAnimations} from '../sortingAlgorithms/SelectionSort.js';\r\nimport {getInsertionSortAnimations} from '../sortingAlgorithms/InsertionSort.js';\r\nimport {getBubbleSortAnimations} from '../sortingAlgorithms/BubbleSort.js';\r\nimport {getQuickSortAnimations} from '../sortingAlgorithms/QuickSort.js';\r\nimport '../styles/SortingVisualizer.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {Title} from './Title'\r\nimport SimpleSlider from './Slider';\r\nimport { connect } from 'react-redux';\r\n\r\n// Number of bars (value) in the array\r\nconst NUMBER_OF_ARRAY_BARS = 100;\r\n\r\n// Main color of the array bars\r\nconst PRIMARY_COLOR = '#aec6cf';\r\n\r\n// Color of array bars that are being compared throughout the animations\r\nconst SECONDARY_COLOR = '#ff6961';\r\n\r\n// Color of array bars after sorting\r\nconst TERTIARY_COLOR = '#77dd77';\r\n\r\nclass SortingVisualizer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n      title: 'Select a sorting algorithm',\r\n      resetDisabled: false,\r\n      selectionDisabled: false,\r\n      insertionDisabled: false,\r\n      bubbleDisabled: false,\r\n      mergeDisabled: false,\r\n      quickDisabled: false,\r\n      sortDisabled: false,\r\n      // Default selected sorting algorithm (0: merge)\r\n      selectedAlgo: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = 'Sorting Visualizer';\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    this.setState({\r\n      title: 'Select a sorting algorithm'\r\n    });\r\n\r\n    this.enableButtons()\r\n\r\n    const array = [];\r\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n      array.push(randomIntFromInterval(50, 650));\r\n    }\r\n\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\r\n    }\r\n\r\n    this.setState({array});\r\n  }\r\n\r\n  disableButtons() {\r\n    this.setState({\r\n      resetDisabled: true,\r\n      selectionDisabled: true,\r\n      insertionDisabled: true,\r\n      bubbleDisabled: true,\r\n      mergeDisabled: true,\r\n      quickDisabled: true,\r\n      sortDisabled: true,\r\n    })\r\n  }\r\n\r\n  enableButtons(){\r\n    this.setState({\r\n      selectionDisabled: false,\r\n      insertionDisabled: false,\r\n      bubbleDisabled: false,\r\n      mergeDisabled: false,\r\n      quickDisabled: false,\r\n      sortDisabled: false,\r\n    })\r\n  }\r\n\r\n  // Select algorithm to be run when an algorithm button is clicked\r\n  selectSortingAlgorithm(val) {\r\n    if (val === 0) {\r\n      this.setState({\r\n        selectedAlgo: 0,\r\n        selectionDisabled: true,\r\n        insertionDisabled: false,\r\n        bubbleDisabled: false,\r\n        mergeDisabled: false,\r\n        quickDisabled: false,\r\n        title: 'Selection Sort'\r\n      })\r\n    } else if (val === 1) {\r\n      this.setState({\r\n        selectedAlgo: 1,\r\n        selectionDisabled: false,\r\n        insertionDisabled: true,\r\n        bubbleDisabled: false,\r\n        mergeDisabled: false,\r\n        quickDisabled: false,\r\n        title: 'Insertion Sort'\r\n      })\r\n    } else if (val === 2) {\r\n      this.setState({\r\n        selectedAlgo: 2,\r\n        selectionDisabled: false,\r\n        insertionDisabled: false,\r\n        bubbleDisabled: true,\r\n        mergeDisabled: false,\r\n        quickDisabled: false,\r\n        title: 'Bubble Sort'\r\n      })\r\n    } else if (val === 3) {\r\n      this.setState({\r\n        selectedAlgo: 3,\r\n        selectionDisabled: false,\r\n        insertionDisabled: false,\r\n        bubbleDisabled: false,\r\n        mergeDisabled: true,\r\n        quickDisabled: false,\r\n        title: 'Merge Sort'\r\n      })\r\n    } else if (val === 4) {\r\n      this.setState({\r\n        selectedAlgo: 4,\r\n        selectionDisabled: false,\r\n        insertionDisabled: false,\r\n        bubbleDisabled: false,\r\n        mergeDisabled: false,\r\n        quickDisabled: true,\r\n        title: 'Quick Sort'\r\n      })\r\n    }\r\n  }\r\n\r\n  // Handler for 'Sort!' button\r\n  runSortingAlgorithm() {\r\n    if (this.state.selectedAlgo === 0) {\r\n      this.disableButtons()\r\n      this.selectionSort()\r\n    } else if (this.state.selectedAlgo === 1) {\r\n      this.disableButtons()\r\n      this.insertionSort()\r\n    } else if (this.state.selectedAlgo === 2) {\r\n      this.disableButtons()\r\n      this.bubbleSort()\r\n    } else if (this.state.selectedAlgo === 3) {\r\n      this.disableButtons()\r\n      this.mergeSort()\r\n    } else if (this.state.selectedAlgo === 4) {\r\n      this.disableButtons()\r\n      this.quickSort()\r\n    }\r\n  }\r\n\r\n  selectionSort() {\r\n    const animations = getSelectionSortAnimations(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = (animations[i][0] === \"comparison1\") || (animations[i][0] === \"comparison2\");\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n      if(isColorChange === true) {\r\n        const color = (animations[i][0] === \"comparison1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        },i * this.props.sliderSpeed.value);\r\n\r\n      } else if (animations[i][0] === \"finished\") {\r\n        const [temp, barIndex, temp2] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n\r\n        setTimeout(() => {\r\n          barStyle.backgroundColor = TERTIARY_COLOR;\r\n          this.setState({\r\n            resetDisabled: false\r\n          })\r\n        },i * this.props.sliderSpeed.value);\r\n\r\n      } else {\r\n        const [temp, barIndex, newHeight] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n        setTimeout(() => {\r\n          barStyle.height = `${newHeight}px`;\r\n        },i * this.props.sliderSpeed.value);  \r\n      }\r\n    }\r\n  }\r\n\r\n  insertionSort() {\r\n    const animations = getInsertionSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = (animations[i][0] === \"comparison1\") || (animations[i][0] === \"comparison2\");\r\n      \r\n      if(isColorChange === true) {\r\n        const color = (animations[i][0] === \"comparison1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        \r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        },i * this.props.sliderSpeed.value);\r\n\r\n      } else if (animations[i][0] === \"finished\") {\r\n        const [temp, barIndex, temp2] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n\r\n        setTimeout(() => {\r\n          barStyle.backgroundColor = TERTIARY_COLOR;\r\n          this.setState({\r\n            resetDisabled: false\r\n          })\r\n        },i * this.props.sliderSpeed.value);\r\n\r\n      } else {\r\n        const [temp, barIndex, newHeight] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n        setTimeout(() => {\r\n          barStyle.height = `${newHeight}px`;\r\n        },i * this.props.sliderSpeed.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    const animations = getBubbleSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const isColorChange = (i % 4 === 0) || (i % 4 === 1);\r\n            \r\n            if(isColorChange === true && animations[i][0] !== \"finished\") {\r\n              const color = (i % 4 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n              const [barOneIndex, barTwoIndex] = animations[i];\r\n              const barOneStyle = arrayBars[barOneIndex].style;\r\n              const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                setTimeout(() => {\r\n                  barOneStyle.backgroundColor = color;\r\n                  barTwoStyle.backgroundColor = color;\r\n                },i * this.props.sliderSpeed.value);\r\n\r\n            } else if (animations[i][0] === \"finished\") {\r\n              const [temp, barIndex] = animations[i];\r\n              const barStyle = arrayBars[barIndex].style;\r\n      \r\n              setTimeout(() => {\r\n                barStyle.backgroundColor = TERTIARY_COLOR;\r\n                this.setState({\r\n                  resetDisabled: false\r\n                })\r\n              },i * this.props.sliderSpeed.value);\r\n\r\n            } else {\r\n                const [barIndex, newHeight] = animations[i];\r\n                if (barIndex === -1) {\r\n                  continue;\r\n                }\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                  barStyle.height = `${newHeight}px`;\r\n                },i * this.props.sliderSpeed.value);  \r\n            }\r\n        }\r\n  }\r\n\r\n  mergeSort() {\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n\r\n      if (isColorChange && animations[i][0] !== \"finished\") {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.props.sliderSpeed.value);\r\n\r\n      } else if (animations[i][0] === \"finished\") {\r\n        const [temp, barIndex] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n\r\n        setTimeout(() => {\r\n          barStyle.backgroundColor = TERTIARY_COLOR;\r\n          this.setState({\r\n            resetDisabled: false\r\n          })\r\n        },i * this.props.sliderSpeed.value);\r\n\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * this.props.sliderSpeed.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n    const animations = getQuickSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    \r\n    for (let i = 0; i <= animations.length - 1; i++) {\r\n      const isColorChange = (i % 6 === 0) || (i % 6 === 1);\r\n\r\n      if (isColorChange === true && animations[i][0] !== \"finished\") {\r\n        const color = (i % 6 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [barOneIndex, barTwoIndex] = animations[i];\r\n        if(barOneIndex === -1) {\r\n          continue;\r\n        }\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        },i * this.props.sliderSpeed.value);\r\n\r\n      } else if (animations[i][0] === \"finished\") {\r\n        const [temp, barIndex] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n\r\n        setTimeout(() => {\r\n          barStyle.backgroundColor = TERTIARY_COLOR;\r\n          this.setState({\r\n            resetDisabled: false\r\n          })\r\n        },i * this.props.sliderSpeed.value);\r\n\r\n      } else {\r\n        const [barIndex, newHeight] = animations[i];\r\n        if (barIndex === -1) {\r\n          continue;\r\n        }\r\n        const barStyle = arrayBars[barIndex].style;\r\n        setTimeout(() => {\r\n          barStyle.height = `${newHeight}px`;\r\n        },i * this.props.sliderSpeed.value);  \r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {array} = this.state;\r\n    return (\r\n      <div className='container'>\r\n        <AppBar position='static'>\r\n            <Toolbar>\r\n                <Typography variant='title' color='inherit'>\r\n                  Sorting Algorithm Visualizer\r\n                </Typography>\r\n                <Box display='inline' m={3}><Button disabled={this.state.resetDisabled} variant='contained' color='primary' onClick={() => this.resetArray()}>Reset</Button></Box>\r\n                <Box display='inline' m={1}><Button disabled={this.state.selectionDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(0)}>Selection Sort</Button></Box>\r\n                <Box display='inline' m={1}><Button disabled={this.state.insertionDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(1)}>Insertion Sort</Button></Box>\r\n                <Box display='inline' m={1}><Button disabled={this.state.bubbleDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(2)}>Bubble Sort</Button></Box>\r\n                <Box display='inline' m={1}><Button disabled={this.state.mergeDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(3)}>Merge Sort</Button></Box>\r\n                <Box display='inline' m={1}><Button disabled={this.state.quickDisabled} variant='contained' color='primary' onClick={() => this.selectSortingAlgorithm(4)}>Quick Sort</Button></Box>\r\n                <Box display='inline' m={3}><Button disabled={this.state.sortDisabled} variant='contained' color='primary.light' onClick={() => this.runSortingAlgorithm()}>Sort!</Button></Box>\r\n            \r\n                <Box m={5}>\r\n                  <SimpleSlider/>\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n        <Box m={2}><Title title={this.state.title}></Title></Box>\r\n\r\n        <div className='array-container'>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className='array-bar'\r\n              key={idx}\r\n              style={{\r\n                backgroundColor: PRIMARY_COLOR,\r\n                height: `${value}px`,\r\n              }}></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sliderSpeed: state.speedReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SortingVisualizer)","export function getSelectionSortAnimations(array) {\r\n  const animations = [];\r\n  const auxiliaryArray = array.slice();\r\n\r\n  selectionSort(auxiliaryArray, animations);\r\n\r\n  for (let i = 0; i <= array.length - 1; i++) {\r\n    animations.push([\"finished\", i, i]);\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\nfunction selectionSort(auxiliaryArray, animations) {\r\n  let endIdx = auxiliaryArray.length - 1;\r\n\r\n  for (let i = 0; i <= endIdx; i++) {\r\n    // Find minimum element in unsorted array\r\n    let min_idx = i;\r\n    for (let j = i + 1; j <= endIdx; j++) {\r\n      animations.push([\"comparison1\", min_idx, j]);\r\n      animations.push([\"comparison2\", min_idx, j]);\r\n      if (auxiliaryArray[j] < auxiliaryArray[min_idx]) {\r\n        min_idx = j;\r\n      }\r\n    }\r\n    // Swap min element with i-th element\r\n    animations.push([\"swap\", min_idx, auxiliaryArray[i]]);\r\n    animations.push([\"swap\", i, auxiliaryArray[min_idx]]);\r\n\r\n    let min = auxiliaryArray[min_idx];\r\n    auxiliaryArray[min_idx] = auxiliaryArray[i];\r\n    auxiliaryArray[i] = min;\r\n  }\r\n}","export function getInsertionSortAnimations(array) {\r\n  const animations = [];\r\n  const auxiliaryArray = array.slice();\r\n  insertionSort(auxiliaryArray, animations);\r\n\r\n  for (let i = 0; i <= array.length - 1; i++) {\r\n    animations.push([\"finished\", i, i]);\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\nfunction insertionSort(auxiliaryArray, animations) {\r\n  let endIdx = auxiliaryArray.length - 1;\r\n\r\n  for (let i = 1; i <= endIdx; ++i) {\r\n    // Find minimum element in unsorted array\r\n    let key = auxiliaryArray[i];\r\n    let j = i - 1;\r\n\r\n    animations.push([\"comparison1\", j, i]);\r\n    animations.push([\"comparison2\", j, i]);\r\n\r\n    while (j >= 0 && auxiliaryArray[j] > key) {\r\n      animations.push([\"overwrite\", j + 1, auxiliaryArray[j]]);\r\n\r\n      auxiliaryArray[j + 1] = auxiliaryArray[j];\r\n      j--;\r\n\r\n      if (j >= 0) {\r\n        animations.push([\"comparison1\", j, i]);\r\n        animations.push([\"comparison2\", j, i]);\r\n      }\r\n    }\r\n    animations.push([\"overwrite\", j + 1, key]);\r\n    auxiliaryArray[j + 1] = key;\r\n  }\r\n}","import React from 'react';\r\nimport SortingVisualizer from './components/SortingVisualizer';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <SortingVisualizer></SortingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n  value: 1\r\n};\r\n\r\nconst speedReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SPEED\":\r\n      return {\r\n        ...state,\r\n        value: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default speedReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport speedReducer from './reducers/speedReducer';\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    speedReducer\r\n  })\r\n);\r\n\r\nstore.subscribe(() => {\r\n  console.log(\"Store updated!\", store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}